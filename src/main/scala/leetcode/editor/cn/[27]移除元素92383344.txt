osewin) -p

// 请注意，输入数组是以「引用」方式传递的，这意味着在函数里修改输入数组对于调用者是可见的。
//
// 你可以想象内部操作如下: 
//
// // nums 是以“引用”方式传递的。也就是说，不对实参作任何拷贝
//int len = removeElement(nums, val);
//
//// 在函数里修改输入数组对于调用者是可见的。
//// 根据你的函数返回的长度, 它会打印出数组中 该长度范围内 的所有元素。
//for (int i = 0; i < len; i++) {
//    print(nums[i]);
//}
// 
// Related Topics 数组 双指针 
// \U0001f44d 609 \U0001f44e 0


object Solution {
  def removeElement(nums: Array[Int], `val`: Int): Int = {
    val value = `val`
    var left = 0
    var right = nums.length - 1
    while (left < right) {
      while (nums(left) != value) {
        left += 1
      }
      while (nums(right) == value) {
        right -= 1
      }
      val tmp = nums(left)
      nums(left) = nums(right)
      nums(right) = tmp
    }
    left + 1
  }
}

//total_correct:null
//compile_error:Line 1: error: expected class or object definition (in solution.scala)
