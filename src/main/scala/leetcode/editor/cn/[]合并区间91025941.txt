object Solution {
  def merge(intervals: Array[Array[Int]]): Array[Array[Int]] = {

    import scala.collection.mutable.ArrayBuffer

    val myArray = new ArrayBuffer[Array[Int]]

    val array: Array[Array[Int]] = intervals.sortBy(x => x(0))

    if (intervals.length == 1) return intervals
    var i = 0
    var j = 1

    while (i < intervals.length && j < intervals.length) {

      println(intervals(i)(1))
      println(intervals(j)(1))
      if (intervals(i)(1) >= intervals(j)(0)) {

        intervals(i)(1) = math.max(intervals(i)(1), intervals(j)(1))
        j += 1

      } else {

        myArray.append(intervals(i))
        i = j
        j += 1

      }

    }

    myArray.append(intervals(i))
    myArray.toArray

  }
}

//runtime_error:Line 33: java.lang.ArrayIndexOutOfBoundsException: 0 (at merge)
//last_testcase:[]
